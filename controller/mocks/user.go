// Code generated by MockGen. DO NOT EDIT.
// Source: user.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/mariogao/golang-unit-test/model"
	reflect "reflect"
)

// MockIuser is a mock of Iuser interface
type MockIuser struct {
	ctrl     *gomock.Controller
	recorder *MockIuserMockRecorder
}

// MockIuserMockRecorder is the mock recorder for MockIuser
type MockIuserMockRecorder struct {
	mock *MockIuser
}

// NewMockIuser creates a new mock instance
func NewMockIuser(ctrl *gomock.Controller) *MockIuser {
	mock := &MockIuser{ctrl: ctrl}
	mock.recorder = &MockIuserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIuser) EXPECT() *MockIuserMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockIuser) Get(u *model.User) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", u)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockIuserMockRecorder) Get(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIuser)(nil).Get), u)
}

// Update mocks base method
func (m *MockIuser) Update(u *model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockIuserMockRecorder) Update(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIuser)(nil).Update), u)
}
